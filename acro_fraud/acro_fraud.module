<?php
/**
 * @file
 * Acro-Fraud main file.
 */

/**
 * Implements hook_menu()
 */
function acro_fraud_menu(){
  $items = array();
  $items['admin/commerce/config/advanced-settings/fraud'] = array(
      'title'=>'Fraud detection',
      'page callback'=>'drupal_get_form',
      'page arguments'=> array('acro_fraud_form'),
      'access arguments' => array('administer acro_fraud settings'),
      'access callback' => TRUE,
      'type'=>MENU_NORMAL_ITEM,
  );
  $items['admin/commerce/config/advanced-settings/fraud/default'] = array(
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'title' => 'Possible Fraud',
      'weight' => 1,
  );

  $items["admin/commerce/config/advanced-settings/fraud/second"] = array(
      'type' => MENU_LOCAL_TASK,
      'title' => 'Fraud Settings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('acro_fraud_admin_settings'),
      'access arguments' => array('fraud setting'),
      'access callback' => TRUE,
      'weight' => 2,
      'file' => '/includes/acro_fraud.admin.inc'
  );
  return $items;
}

function acro_fraud_theme(){
  return [
      'acro_fraud_form'=> [
          'render element' => 'form',
      ],
  ];
}

function acro_fraud_admin(){
  $form = array();
  $form['acro_fraud_test']= array(
      '#type'=>'textfield'
  );
  return $form;
}

function acro_fraud_form($form, &$form_state){
  $views_name = 'commerce_backoffice_orders';
  $display_id = 'page';

  /*
    To find your display_id go to the edit page of your view.
    There will be a list of displays at the left side of the control area.
    With out creating a view or block, "Master" will be at the top of that list.
    Hover your cursor over the name of the display you want to use. and look at the URL.
    The last word will be the display ID.
  */

  $orders = views_get_view_result($views_name , $display_id);

  $options = array();

  // Create an options array for the checkbox from the customer nodes. Your field
  // names will differ, look them up  via the dpm() call above. You need devel.module
  // for that.
  foreach($orders as $order) {
    $result = db_select('fraud_table', 'ft')
        ->fields('ft')
        ->condition('order_id', $order->order_id, '=')
        ->execute()
        ->fetchAssoc();
    $fraud_score=$result['fscore'];
    if($fraud_score == ''){
      $fraud_score =0;
    }
    $options[$order->order_id] = array(
        'order_id'=> $order->order_id,
        'fraud_score'=>$fraud_score,
    );
  }
  $header = array
  (
      'order_id' => 'Order ID',
      'fraud_score'=>'Fraud Score',
  );

  $form['fraud_orders'] = array(
      '#type' => 'tableselect',
      '#header' => $header,
      '#options' => $options,  // The array we made a bit earlier.
      '#multiple' => TRUE,
  );

  $form['submit'] = array(
      '#type' => 'submit',
      '#value'=>'Mark as Fraud',
      '#submit'=>array('acro_fraud_submit'),
  );
  return $form;
}

/**
 * Implements hook_submit().
 */
function acro_fraud_submit($form, &$form_state){
  if(isset($form_state['values']['fraud_orders'])){
    foreach($form_state['values']['fraud_orders'] as $key => $value){
      if($value !== 0){
        //Insert into DB here.
        $record = [
            'order_id'=>$key,
            'fscore'=>10,
        ];
        drupal_write_record('fraud_table', $record);
        $return = $record['fscore'];
        dpm($return, "Insertted Row into table Fraud_Table. Fraud Score: ");
      }
    }
  }
}

/**
 * Implements hook_views_api().
 */
function acro_fraud_views_api() {
  return array(
      'api' => 3.0,
      'path' => drupal_get_path('module', 'acro_fraud')
  );
}

/**
 * Implements hook_views_default_views().
 */
function acro_fraud_views_default_views() {

  $view = new view();
  $view->name = 'order_risk';
  $view->description = 'Displays the risk score of orders';
  $view->tag = 'commerce';
  $view->base_table = 'commerce_order';
  $view->human_name = 'Order Risk';
  $view->core = 0;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Orders';
  $handler->display->display_options['css_class'] = 'commerce-backoffice-view';
  $handler->display->display_options['use_ajax'] = TRUE;
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'administer commerce_order entities';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['exposed_form']['options']['autosubmit'] = TRUE;
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '50';
  $handler->display->display_options['style_plugin'] = 'table_megarows';
  $handler->display->display_options['style_options']['columns'] = array(
      'views_bulk_operations' => 'views_bulk_operations',
      'order_number' => 'order_number',
      'created' => 'created',
      'name' => 'name',
      'mail' => 'name',
      'commerce_order_total' => 'commerce_order_total',
      'status' => 'status',
      'operations_dropbutton' => 'operations_dropbutton',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
      'views_bulk_operations' => array(
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'order_number' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'created' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'name' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '<br />',
          'empty_column' => 0,
      ),
      'mail' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'commerce_order_total' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'status' => array(
          'sortable' => 0,
          'default_sort_order' => 'asc',
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
      'operations_dropbutton' => array(
          'align' => '',
          'separator' => '',
          'empty_column' => 0,
      ),
  );
  $handler->display->display_options['style_options']['empty_table'] = TRUE;
  $handler->display->display_options['row_plugin'] = 'fields';
  /* No results behavior: Commerce Order: Empty text */
  $handler->display->display_options['empty']['empty_text']['id'] = 'empty_text';
  $handler->display->display_options['empty']['empty_text']['table'] = 'commerce_order';
  $handler->display->display_options['empty']['empty_text']['field'] = 'empty_text';
  /* Relationship: Commerce Order: Referenced customer profile */
  $handler->display->display_options['relationships']['commerce_customer_billing_profile_id']['id'] = 'commerce_customer_billing_profile_id';
  $handler->display->display_options['relationships']['commerce_customer_billing_profile_id']['table'] = 'field_data_commerce_customer_billing';
  $handler->display->display_options['relationships']['commerce_customer_billing_profile_id']['field'] = 'commerce_customer_billing_profile_id';
  /* Relationship: Commerce Order: Owner */
  $handler->display->display_options['relationships']['uid']['id'] = 'uid';
  $handler->display->display_options['relationships']['uid']['table'] = 'commerce_order';
  $handler->display->display_options['relationships']['uid']['field'] = 'uid';
  /* Relationship: Order Risk: Link orders to risk */
  $handler->display->display_options['relationships']['order_id']['id'] = 'order_id';
  $handler->display->display_options['relationships']['order_id']['table'] = 'commerce_order_risk';
  $handler->display->display_options['relationships']['order_id']['field'] = 'order_id';
  $handler->display->display_options['relationships']['order_id']['label'] = 'Default label for the relationship';
  /* Field: Bulk operations: Commerce Order */
  $handler->display->display_options['fields']['views_bulk_operations']['id'] = 'views_bulk_operations';
  $handler->display->display_options['fields']['views_bulk_operations']['table'] = 'commerce_order';
  $handler->display->display_options['fields']['views_bulk_operations']['field'] = 'views_bulk_operations';
  $handler->display->display_options['fields']['views_bulk_operations']['label'] = '';
  $handler->display->display_options['fields']['views_bulk_operations']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['display_type'] = '0';
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['enable_select_all_pages'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['row_clickable'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['force_single'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_settings']['entity_load_capacity'] = '50';
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_operations'] = array(
      'rules_component::rules_commerce_order_status_canceled' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_commerce_order_status_cart' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_order_status_checkout_checkout' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_order_status_checkout_complete' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_order_status_checkout_payment' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_order_status_checkout_review' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_order_status_checkout_shipping' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_commerce_order_status_completed' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_commerce_order_status_pending' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
      'rules_component::rules_commerce_order_status_processing' => array(
          'selected' => 1,
          'postpone_processing' => 0,
          'skip_confirmation' => 0,
          'override_label' => 0,
          'label' => '',
      ),
  );
  /* Field: Commerce Order: Order number */
  $handler->display->display_options['fields']['order_number']['id'] = 'order_number';
  $handler->display->display_options['fields']['order_number']['table'] = 'commerce_order';
  $handler->display->display_options['fields']['order_number']['field'] = 'order_number';
  $handler->display->display_options['fields']['order_number']['label'] = 'ID';
  $handler->display->display_options['fields']['order_number']['link_to_order'] = 'admin';
  /* Field: User: Name */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['label'] = 'Name/Email';
  /* Field: User: E-mail */
  $handler->display->display_options['fields']['mail']['id'] = 'mail';
  $handler->display->display_options['fields']['mail']['table'] = 'users';
  $handler->display->display_options['fields']['mail']['field'] = 'mail';
  $handler->display->display_options['fields']['mail']['relationship'] = 'uid';
  $handler->display->display_options['fields']['mail']['label'] = 'Email';
  $handler->display->display_options['fields']['mail']['link_to_user'] = '0';
  /* Field: Commerce Order: Order total */
  $handler->display->display_options['fields']['commerce_order_total']['id'] = 'commerce_order_total';
  $handler->display->display_options['fields']['commerce_order_total']['table'] = 'field_data_commerce_order_total';
  $handler->display->display_options['fields']['commerce_order_total']['field'] = 'commerce_order_total';
  $handler->display->display_options['fields']['commerce_order_total']['label'] = 'Total';
  $handler->display->display_options['fields']['commerce_order_total']['click_sort_column'] = 'amount';
  $handler->display->display_options['fields']['commerce_order_total']['settings'] = array(
      'calculation' => FALSE,
  );
  /* Field: Commerce Order: Order status */
  $handler->display->display_options['fields']['status']['id'] = 'status';
  $handler->display->display_options['fields']['status']['table'] = 'commerce_order';
  $handler->display->display_options['fields']['status']['field'] = 'status';
  $handler->display->display_options['fields']['status']['label'] = 'Status';
  /* Field: Order Risk: Risk Score */
  $handler->display->display_options['fields']['risk_score']['id'] = 'risk_score';
  $handler->display->display_options['fields']['risk_score']['table'] = 'commerce_order_risk';
  $handler->display->display_options['fields']['risk_score']['field'] = 'risk_score';
  /* Field: Order Risk: Reason */
  $handler->display->display_options['fields']['reason']['id'] = 'reason';
  $handler->display->display_options['fields']['reason']['table'] = 'commerce_order_risk';
  $handler->display->display_options['fields']['reason']['field'] = 'reason';
  /* Sort criterion: Commerce Order: Updated date */
  $handler->display->display_options['sorts']['changed']['id'] = 'changed';
  $handler->display->display_options['sorts']['changed']['table'] = 'commerce_order';
  $handler->display->display_options['sorts']['changed']['field'] = 'changed';
  $handler->display->display_options['sorts']['changed']['order'] = 'DESC';
  /* Contextual filter: Commerce Order: Order ID */
  $handler->display->display_options['arguments']['order_id']['id'] = 'order_id';
  $handler->display->display_options['arguments']['order_id']['table'] = 'commerce_order';
  $handler->display->display_options['arguments']['order_id']['field'] = 'order_id';
  $handler->display->display_options['arguments']['order_id']['default_argument_type'] = 'fixed';
  $handler->display->display_options['arguments']['order_id']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['order_id']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['order_id']['summary_options']['items_per_page'] = '25';
  /* Filter criterion: Commerce Order: Order status */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'commerce_order';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['exposed'] = TRUE;
  $handler->display->display_options['filters']['status']['expose']['operator_id'] = 'status_op';
  $handler->display->display_options['filters']['status']['expose']['label'] = 'Filter by';
  $handler->display->display_options['filters']['status']['expose']['operator'] = 'status_op';
  $handler->display->display_options['filters']['status']['expose']['identifier'] = 'status';
  $handler->display->display_options['filters']['status']['expose']['multiple'] = TRUE;
  /* Filter criterion: Date: Date (commerce_order) */
  $handler->display->display_options['filters']['date_filter']['id'] = 'date_filter';
  $handler->display->display_options['filters']['date_filter']['table'] = 'commerce_order';
  $handler->display->display_options['filters']['date_filter']['field'] = 'date_filter';
  $handler->display->display_options['filters']['date_filter']['operator'] = 'between';
  $handler->display->display_options['filters']['date_filter']['group'] = 1;
  $handler->display->display_options['filters']['date_filter']['exposed'] = TRUE;
  $handler->display->display_options['filters']['date_filter']['expose']['operator_id'] = 'date_filter_op';
  $handler->display->display_options['filters']['date_filter']['expose']['operator'] = 'date_filter_op';
  $handler->display->display_options['filters']['date_filter']['expose']['identifier'] = 'date_filter';
  $handler->display->display_options['filters']['date_filter']['form_type'] = 'date_popup';
  $handler->display->display_options['filters']['date_filter']['date_fields'] = array(
      'commerce_order.created' => 'commerce_order.created',
  );
  /* Filter criterion: Global: Combine fields filter */
  $handler->display->display_options['filters']['combine']['id'] = 'combine';
  $handler->display->display_options['filters']['combine']['table'] = 'views';
  $handler->display->display_options['filters']['combine']['field'] = 'combine';
  $handler->display->display_options['filters']['combine']['operator'] = 'contains';
  $handler->display->display_options['filters']['combine']['exposed'] = TRUE;
  $handler->display->display_options['filters']['combine']['expose']['operator_id'] = 'combine_op';
  $handler->display->display_options['filters']['combine']['expose']['operator'] = 'combine_op';
  $handler->display->display_options['filters']['combine']['expose']['identifier'] = 'combine';
  $handler->display->display_options['filters']['combine']['fields'] = array(
      'order_number' => 'order_number',
      'name' => 'name',
      'mail' => 'mail',
  );

  /* Display: Admin page */
  $handler = $view->new_display('page', 'Admin page', 'admin_page');
  $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
  $handler->display->display_options['path'] = 'admin/commerce/order-risk';
  $handler->display->display_options['menu']['type'] = 'default tab';
  $handler->display->display_options['menu']['title'] = 'Order Risk';
  $handler->display->display_options['menu']['weight'] = '-10';
  $handler->display->display_options['tab_options']['type'] = 'normal';
  $handler->display->display_options['tab_options']['title'] = 'Order Risk';
  $handler->display->display_options['tab_options']['description'] = 'View the risk of orders in the store.';
  $handler->display->display_options['tab_options']['weight'] = '';
  $handler->display->display_options['tab_options']['name'] = 'management';

  $views[$view->name] = $view;
  return $views;
}

/**
 * Implements hook_views_data()
 */
function acro_fraud_views_data(){
  $data['commerce_order_risk']['table']['group'] = t('Order Risk');

  // Define the base table
  $data['commerce_order_risk']['table']['base'] = array(
      'field' => 'order_id', // This is the identifier field for the view.
      'title' => t('Order Risk'),
      'help' => t('Contains information about an orders risk.'),
      'weight' => -10,
  );

  // Join on commerce_order
  $data['commerce_order_risk']['table']['join'] = array(
    // Index this array by the table name to which this table refers.
    // 'left_field' is the primary key in the referenced table.
    // 'field' is the foreign key in this table.
      'commerce_order' => array(
          'left_field' => 'order_id',
          'field' => 'order_id',
      ),
  );


  // Order ID table field.
  $data['commerce_order_risk']['order_id'] = array(
      'title' => t('Order ID'),
      'help' => t('The ID of an Order'),
    // Define a relationship
      'relationship' => array(
          'base' => 'commerce_order', // The name of the table to join with.
          'base field' => 'order_id', // The name of the field on the joined table.
          'handler' => 'views_handler_relationship',
          'label' => t('Order risk'),
          'title' => t('Link orders to risk'),
          'help' => t('Links the orders to their risk'),
      ),
  );

  $data['commerce_order_risk']['reason'] = array(
      'title' => t('Reason'),
      'help' => t('The reason that determines the risk score'),
      'field' => array(
          'handler' => 'views_handler_field',
          'click sortable' => TRUE, // This is use by the table display plugin.
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
      'filter' => array(
          'handler' => 'views_handler_filter_string',
      ),
      'argument' => array(
          'handler' => 'views_handler_argument_string',
      ),
  );

  $data['commerce_order_risk']['risk_score'] = array(
      'title' => t('Risk Score'),
      'help' => t('The risk associated with the order.'),
      'field' => array(
          'handler' => 'views_handler_field_numeric',
          'click sortable' => TRUE,
      ),
      'filter' => array(
          'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
          'handler' => 'views_handler_sort',
      ),
  );

  return $data;
}

/**
 * Implements hook_order_status_info()
 */
function acro_fraud_commerce_order_status_info(){
  $order_statuses = array();

  $order_statuses['fraudulent'] = array(
      'name' => 'fraudulent',
      'title' => t('Fraudulent (Canceled)'),
      'state' => 'canceled',
  );
  $order_statuses['high_risk'] = array(
      'name' => 'high_risk',
      'title' => t('High Risk (Pending)'),
      'state' => 'pending'
  );

  return $order_statuses;
}
?>
